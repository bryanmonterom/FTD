@model AdminLteMvc.Models.Employee

@{
    ViewBag.Title = "Editar Empleados";
}
<style type="text/css">
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            display: none;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            transition: .4s;
        }

    input[type="checkbox"]:checked + input[type="hidden"] + .slider,
    input[type="checkbox"]:checked + .slider {
        background-color: #2196F3;
    }

    input[type="checkbox"]:focus + input[type="hidden"] + .slider,
    input[type="checkbox"]:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input[type="checkbox"]:checked + input[type="hidden"] + .slider:before,
    input[type="checkbox"]:checked + .slider:before {
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
</style>


<div class="container-fluid">

    @using (Html.BeginForm("Edit", "Employees", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-sm-6">
                <div class="form-horizontal">
                    <h4>Empleados</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.ByteContent)
                    @Html.HiddenFor(model => model.ContentType)



                    <div class="form-group">
                        @Html.LabelFor(model => model.Identification, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Identification, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Identification, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdSupervisor, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("IdSupervisor", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdSupervisor, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("IdDepartment", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdSupervisor, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">

                        @Html.LabelFor(m => m.IsSupervisor, new { @class = "control-label col-md-2" })
                        <label class="switch">
                            @Html.CheckBoxFor(m => m.IsSupervisor, new { @class = "form-control" })
                            <div class="slider round">
                            </div>
                        </label>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ByteContent, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" name="files" id="file" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                        </div>
                    </div>
                </div>

            </div>
            <div class="col-sm-6">
                <h4>Firma</h4>
                <hr />
                <img src="@ViewBag.ImageData" alt="Firma"/>

            </div>
        </div>

    }

    <div>
        @Html.ActionLink("Volver a la Lista", "Index", null, new { @class = "btn btn-primary" })
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        $(document).ready(function () {
            $("#IsSupervisor").change(function () {
                if ($("#IsSupervisor").is(":checked")) {

                    $('#IsSupervisor').val(true);
                } else {
                    $('#IsSupervisor').prop('checked', false);

                }
            });
        });

    </script>
}
