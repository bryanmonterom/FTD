@model PagedList.IPagedList<AdminLteMvc.Models.RequestHistory>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Aprobaciones";
}
<div class="container-fluid">
    <div class="form-group form-inline">
        <div class="form-group">
            <div>
                <p class="text-info">Empleado</p>
            </div>
            <input type="text" placeholder="Nombre" id="employee" name="employee" class="form-control" />
        </div>
        <div class="form-group">
            <div>
                <p class="text-info">Solicitud</p>
            </div>
            <input type="text" placeholder="Id de Solicitud" id="request" name="request" class="form-control" />
        </div>
        <div class="form-group">
            <div>
                <p class="text-info">Estado</p>
            </div>
            @Html.DropDownList("IdStatus", null, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            <div>
                <p class="text-info">Tipo de Aprobaciones</p>
            </div>
            @Html.DropDownList("Approvals", null, htmlAttributes: new { @class = "form-control" })
        </div>
        <div class="form-group">
            <div>
                <p class="text-info">Acciones</p>
            </div>
            <button type="button" class="btn btn-default" aria-label="Left Align" onclick="Filter()">
                <span class="glyphicon glyphicon-filter" aria-hidden="true"></span>
                Filtrar
            </button>
            @Html.ActionLink("Limpiar Filtro", "Index", "Attachments", htmlAttributes: new { @class = "btn btn-default" })

        </div>

    </div>

    <p>
    </p>
    
    <table class="table table-hover table-striped">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Employee.Identification)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().FlowSteps.StepName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Request.Identifier)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Status.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().DateApproval)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Comments)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Employee.Identification)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FlowSteps.StepName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Request.Identifier)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateApproval)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Comments)
                </td>
                <td>
                    @{
                        @Html.ActionLink("Ver detalles", "Details", "Request", new { id = item.IdRequest }, htmlAttributes: new { @class = "btn btn-warning" })
                        <label>|</label>
                        var status = item.IdStatus;
                        var admin = ViewBag.IsAdmin;
                        if (status == 3)
                        {
                            @Html.ActionLink("Aprobar", "Edit", new { id = item.Id, status = (int)AdminLteMvc.Utilities.Status.Approved }, htmlAttributes: new { @class = "btn btn-success" })
                            <label>|</label>
                            @Html.ActionLink("Rechazar", "Edit", new { id = item.Id, status = (int)AdminLteMvc.Utilities.Status.Rejected }, htmlAttributes: new { @class = "btn btn-danger" })
                            <label>|</label>
                        }
                    }
                </td>

            </tr>

        }

    </table>
</div>
<br />
Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>
@section Scripts
{
    <script>
        function Filter()
        {
            //  $("#btnFilter").click(function() {
            $.ajax({
                url: "@Url.Action("Index", "RequestHistories")",
                type: "Get",
                data: { IdStatus: $("#IdStatus").val(), employee:$("#employee").val(), request:$("#request").val(),Approvals:$("#Approvals").val() },
                cache: false,
                dataType: "html",
                success: function(data) {
                    $("body").html(data);
                }
            });
            //});
        }
    </script>
}